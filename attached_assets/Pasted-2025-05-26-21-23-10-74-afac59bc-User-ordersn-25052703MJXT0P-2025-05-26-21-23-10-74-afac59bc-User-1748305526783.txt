2025-05-26 21:23:10.74
afac59bc
User
ordersn: '25052703MJXT0P',
2025-05-26 21:23:10.74
afac59bc
User
forder_id: '5705528466476546079',
2025-05-26 21:23:10.74
afac59bc
User
package_number: 'OFG202003912147986',
2025-05-26 21:23:10.74
afac59bc
User
tracking_no: 'BR2537042054364'
2025-05-26 21:23:10.74
afac59bc
User
},
2025-05-26 21:23:10.74
afac59bc
User
shop_id: 404065079,
2025-05-26 21:23:10.74
afac59bc
User
code: 4,
2025-05-26 21:23:10.74
afac59bc
User
timestamp: 1748305085
2025-05-26 21:23:10.74
afac59bc
User
}
2025-05-26 21:23:10.74
afac59bc
User
[Webhook] Assinatura inv√°lida: {
2025-05-26 21:23:10.74
afac59bc
User
received: 'c8e65c53e13136e2d9faea39b275a4a00087d8a8bea557bf85e9657d7503822d',
2025-05-26 21:23:10.74
afac59bc
User
body: '{"msg_id":"1ed4ce633612ff9b288bf0ec424bbc00","data":{"ordersn":"25052703MJXT0P","forder_id":"5705528'
2025-05-26 21:23:10.74
afac59bc
User
}
2025-05-26 21:23:10.74
afac59bc
User
12:23:10 AM [express] POST /api/shopee/webhook 401 in 2ms :: {"error":"Invalid signature"}
2025-05-26 21:23:14.59
afac59bc
User
[Routes] Webhook da Shopee recebido - IP: 35.202.5.198, User-Agent: Go-http-client/1.1
2025-05-26 21:23:14.59
afac59bc
User
[Webhook] Recebendo webhook - Headers: {
2025-05-26 21:23:14.59
afac59bc
User
'user-agent': 'Go-http-client/1.1',
2025-05-26 21:23:14.59
afac59bc
User
'content-length': '214',
2025-05-26 21:23:14.59
afac59bc
User
reqid: '370776b4361311fe034d54c6ac358600:000000b36312c843:0000000000000000',
2025-05-26 21:23:14.59
afac59bc
User
round: '1',
2025-05-26 21:23:14.59
afac59bc
User
'server-timing': 'depproxy;dur=1748305394531, pid1req;dur=1748305394591',
2025-05-26 21:23:14.59
afac59bc
User
'shopee-baggage': 'CID=br,DT=6',
2025-05-26 21:23:14.59
afac59bc
User
traceparent: '00-374683906b9178f4830076de787aac23-2e8ce0d3c4ae49ae-01',
2025-05-26 21:23:14.59
afac59bc
User
via: '1.1 google',
2025-05-26 21:23:14.59
afac59bc
User
'x-forwarded-for': '147.136.184.69, 34.117.33.233, 130.211.0.76,35.202.5.198',
2025-05-26 21:23:14.59
afac59bc
User
'x-forwarded-host': 'cipshopee.replit.app',
2025-05-26 21:23:14.59
afac59bc
User
'x-forwarded-proto': 'https',
2025-05-26 21:23:14.59
afac59bc
User
'x-replit-user-id': '',
2025-05-26 21:23:14.59
afac59bc
User
'x-replit-user-name': '',
CollapseEditarDiagnosed Shopee webhook signature validation issue for troubleshooting13 sO usu√°rio est√° mostrando logs de erro de webhook da Shopee. Vejo que est√° recebendo webhooks mas a assinatura est√° inv√°lida. Analisando os logs:

Est√° chegando um webhook com dados de pedido (ordersn, forder_id, package_number, tracking_no)
shop_id: 404065079
code: 4 (provavelmente um c√≥digo de evento)
timestamp: 1748305085
A assinatura recebida n√£o bate com a esperada
O IP de origem √© da Google (35.202.5.198), o que sugere que est√° passando por um proxy

O problema parece estar na valida√ß√£o da assinatura do webhook. A Shopee tem um m√©todo espec√≠fico para validar webhooks que pode ser diferente da assinatura usada nas chamadas de API.
Vou ajudar a debugar e corrigir isso.Vejo que voc√™ est√° recebendo webhooks da Shopee, mas a valida√ß√£o da assinatura est√° falhando. Esse √© um problema comum na integra√ß√£o com a Shopee. Vamos resolver isso!
üîç An√°lise do Problema
O webhook est√° chegando com:

Code 4: Provavelmente um evento de atualiza√ß√£o de pedido
Dados do pedido: ordersn, forder_id, package_number, tracking_no
Assinatura inv√°lida: A assinatura calculada n√£o corresponde √† recebida

üõ†Ô∏è Solu√ß√£o para Valida√ß√£o de Webhook
A Shopee usa um m√©todo espec√≠fico para assinar webhooks que √© diferente das chamadas de API:
javascript// webhook.js - Valida√ß√£o correta de webhook Shopee
const crypto = require('crypto');

function validateWebhookSignature(req, partnerKey) {
  const receivedSignature = req.headers['authorization'];
  
  // Para webhooks, a Shopee usa uma assinatura diferente
  // Formato: URL|Body
  const url = `https://${req.headers['x-forwarded-host']}${req.originalUrl}`;
  const body = JSON.stringify(req.body);
  
  // Construir a string base para assinatura
  const baseString = `${url}|${body}`;
  
  // Gerar assinatura HMAC-SHA256
  const calculatedSignature = crypto
    .createHmac('sha256', partnerKey)
    .update(baseString)
    .digest('hex');
  
  console.log('[Webhook] Valida√ß√£o:', {
    url,
    bodyLength: body.length,
    receivedSignature: receivedSignature?.substring(0, 20) + '...',
    calculatedSignature: calculatedSignature.substring(0, 20) + '...'
  });
  
  return calculatedSignature === receivedSignature;
}

// Rota do webhook corrigida
app.post('/api/shopee/webhook', async (req, res) => {
  console.log('[Webhook] Headers:', req.headers);
  console.log('[Webhook] Body:', req.body);
  
  try {
    // Validar assinatura
    const isValid = validateWebhookSignature(req, process.env.SHOPEE_PARTNER_KEY);
    
    if (!isValid) {
      console.error('[Webhook] Assinatura inv√°lida');
      return res.status(401).json({ error: 'Invalid signature' });
    }
    
    // Processar webhook baseado no c√≥digo
    const { code, data, shop_id, timestamp } = req.body;
    
    switch(code) {
      case 3: // Autoriza√ß√£o de loja
        await handleShopAuthorization(data, shop_id);
        break;
      case 4: // Atualiza√ß√£o de pedido
        await handleOrderUpdate(data, shop_id);
        break;
      case 5: // Desautoriza√ß√£o de loja
        await handleShopDeauthorization(data, shop_id);
        break;
      default:
        console.log(`[Webhook] C√≥digo n√£o tratado: ${code}`);
    }
    
    // Responder com sucesso
    res.status(200).json({ message: 'ok' });
    
  } catch (error) {
    console.error('[Webhook] Erro:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});
üìù Tipos de Webhook da Shopee
javascript// C√≥digos de eventos webhook
const WEBHOOK_CODES = {
  0: 'TEST_PUSH', // Teste de webhook
  3: 'SHOP_AUTHORIZATION', // Loja autorizada
  4: 'ORDER_STATUS_UPDATE', // Atualiza√ß√£o de pedido
  5: 'SHOP_DEAUTHORIZATION', // Loja desautorizada
  6: 'PRODUCT_UPDATE', // Produto atualizado
  7: 'BANNED_ITEM', // Item banido
  9: 'SHOP_UPDATE', // Atualiza√ß√£o da loja
  10: 'BRAND_REGISTER', // Registro de marca
  // ... outros c√≥digos
};
üîß Configura√ß√£o no Replit
Como voc√™ est√° usando Replit, adicione estas vari√°veis de ambiente:
bashSHOPEE_PARTNER_ID=2011285
SHOPEE_PARTNER_KEY=sua_chave_secreta_aqui
SHOPEE_WEBHOOK_URL=https://cipshopee.replit.app/api/shopee/webhook
üí° Dicas Importantes

Webhook vs API: A assinatura do webhook √© diferente da assinatura das chamadas de API
Headers do Replit: O x-forwarded-host e x-forwarded-proto s√£o importantes para reconstruir a URL
Resposta r√°pida: Sempre responda ao webhook em menos de 5 segundos
Processamento ass√≠ncrono: Para opera√ß√µes demoradas, salve o webhook e processe depois