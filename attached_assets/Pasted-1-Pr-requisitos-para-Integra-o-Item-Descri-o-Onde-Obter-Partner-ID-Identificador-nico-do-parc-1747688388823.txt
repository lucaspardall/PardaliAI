1. Pré-requisitos para Integração
Item	Descrição	Onde Obter
Partner ID	Identificador único do parceiro	Painel Shopee Open Platform > App Management 15
Partner Key	Chave secreta para assinaturas HMAC	Painel Shopee Open Platform > App Key 15
Shop ID	ID da loja do cliente (ex: shopee.com.br/shop/12345678)	URL da loja ou API /shop/get_shop_info 15
Redirect URI	URL aprovada para callbacks OAuth	Configurada no painel da Shopee (ex: https://seusistema.com/api/shopee/callback) 6
2. Fluxo de Autenticação OAuth 2.0
Passo 1: Solicitar Autorização
http
GET https://partner.shopeemobile.com.br/api/v2/shop/auth_partner?
  partner_id={partner_id}
  &redirect={redirect_uri}
  &state={unique_id}
  &timestamp={unix_timestamp}
Parâmetros obrigatórios:

partner_id: Seu Partner ID

redirect: URL encodeada (ex: https%3A%2F%2Fseusistema.com%2Fcallback)

state: UUID para prevenção de CSRF

timestamp: Unix timestamp em segundos 615

Passo 2: Trocar Code por Access Token
python
import hashlib
import hmac
import requests

def generate_signature(partner_key, path, params):
    base_str = f"{path}?{urlencode(sorted(params.items()))}"
    return hmac.new(partner_key.encode(), base_str.encode(), hashlib.sha256).hexdigest()

params = {
    "partner_id": "SEU_PARTNER_ID",
    "code": "CODE_RECEBIDO",
    "shop_id": "SHOP_ID_CLIENTE",
    "timestamp": int(time.time())
}

signature = generate_signature("SUA_PARTNER_KEY", "/api/v2/auth/token/get", params)

response = requests.post(
    "https://partner.shopeemobile.com.br/api/v2/auth/token/get",
    json=params,
    headers={
        "Authorization": f"sha256 {signature}",
        "X-Partner-Id": params["partner_id"],
        "X-Timestamp": str(params["timestamp"])
    }
)
Resposta esperada:

json
{
  "access_token": "xxxxxx",
  "refresh_token": "yyyyyy",
  "expire_in": 14400,
  "shop_id": 123456
}
615

3. Estrutura de Assinatura HMAC-SHA256
A assinatura é gerada combinando:

Caminho da API (ex: /api/v2/product/get_item_list)

Parâmetros ordenados alfabeticamente (ex: partner_id=1001&shop_id=123)

Partner Key como segredo

Exemplo de código:

python
def generate_shopee_signature(partner_key, api_path, params):
    ordered_params = "&".join([f"{k}={v}" for k, v in sorted(params.items())]
    base_string = f"{api_path}?{ordered_params}"
    return hmac.new(partner_key.encode(), base_string.encode(), hashlib.sha256).hexdigest()
6

4. Endpoints Principais para Integração
Gestão de Produtos
http
POST /api/v2/product/get_item_list
Headers:
  X-Partner-Id: {partner_id}
  X-Timestamp: {timestamp}
  Authorization: sha256 {signature}

Body:
{
  "pagination_offset": 0,
  "pagination_entries_per_page": 100,
  "update_time_from": 1672531200
}
Gestão de Pedidos
http
POST /api/v2/order/get_order_list
Headers: [mesmo formato acima]
Body:
{
  "time_range_field": "create_time",
  "time_from": 1672531200,
  "page_size": 100
}
Atualização de Estoque em Tempo Real
http
POST /api/v2/product/update_stock
Body:
{
  "item_id": 987654,
  "stock": 50,
  "partner_shop_id": 123456
}
615

5. Configuração de Webhooks
Para receber notificações de eventos (ex: novo pedido):

Registre o Webhook no painel Shopee:

URL de callback (ex: https://seusistema.com/api/shopee/webhook)

Eventos selecionados: order.paid, order.shipped

Valide assinaturas usando Partner Key:

python
received_signature = request.headers.get('X-Shopee-Signature')
calculated_signature = hmac.new(partner_key, request.data, hashlib.sha256).hexdigest()
if received_signature != calculated_signature:
    return "Invalid signature", 403
6

6. Tratamento de Erros Comuns
Código	Erro	Solução
1004	Invalid signature	Verificar ordenação de parâmetros e codificação 6
2001	Token expirado	Renovar via /auth/refresh_token 15
3001	Rate limit excedido	Implementar retry com backoff exponencial
4004	Produto não encontrado	Verificar item_id e permissões da loja 15
7. Melhores Práticas para SaaS
Armazenamento Seguro de Tokens:

Criptografar access_token e refresh_token com AES-256

Rotacionar tokens a cada 3h 50min (antes da expiração em 4h) 6

Sincronização em Massa:

python
# Exemplo de sincronização de estoque
for product in saas_products:
    response = shopee_api.update_stock(
        item_id=product.shopee_id,
        stock=product.quantity
    )
    if response.status_code != 200:
        log_error(f"Falha na atualização: {product.id}")
Logs Detalhados:

Registrar todas as chamadas API com timestamps

Monitorar métricas: latência, taxa de erro, uso de rate limit

8. Ferramentas Recomendadas
Postman Collection:

Importar templates da Shopee API v2

Configurar variáveis globais: partner_id, signature, timestamp

Dashboard de Monitoramento:

Grafana para visualizar métricas em tempo real

Alertas via Slack/Email para erros críticos

Integração com Parabola:

Automatizar fluxos de catalogação via interface visual 6

