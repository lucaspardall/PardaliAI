Endpoints para Receber Dados Completos da Loja do Cliente (API Shopee)
Aqui estão os principais endpoints para obter dados completos da loja do cliente após a autenticação OAuth bem-sucedida:
1. Informações da Loja
GET /api/v2/shop/get_shop_info
Objetivo: Obter informações básicas da loja como nome, região, status, etc.
Exemplo de chamada:
javascriptconst shopInfo = await axios.get(
  `https://partner.shopeemobile.com/api/v2/shop/get_shop_info?partner_id=${partnerId}&timestamp=${timestamp}&access_token=${accessToken}&shop_id=${shopId}&sign=${signature}`
);
2. Perfil da Loja
GET /api/v2/shop/get_profile
Objetivo: Obter o perfil detalhado da loja, incluindo descrição e imagens.
3. Métricas de Desempenho
GET /api/v2/shop/get_shop_performance
Objetivo: Obter métricas de desempenho da loja (taxa de resposta, envio, etc).
4. Produtos
GET /api/v2/product/get_item_list
Objetivo: Listar todos os produtos da loja (paginados).
Parâmetros principais:

offset: Posição inicial
page_size: Quantidade de itens por página
item_status: Filtrar por status (NORMAL, DELETED, etc)

Exemplo de chamada:
javascriptconst products = await axios.get(
  `https://partner.shopeemobile.com/api/v2/product/get_item_list?partner_id=${partnerId}&timestamp=${timestamp}&access_token=${accessToken}&shop_id=${shopId}&sign=${signature}&offset=0&page_size=50`
);
5. Detalhes de Produtos
GET /api/v2/product/get_item_base_info
Objetivo: Obter informações básicas sobre produtos específicos.
Parâmetros:

item_id_list: Lista de IDs dos produtos

6. Informações Detalhadas de Produtos
GET /api/v2/product/get_item_detail
Objetivo: Obter informações completas e detalhadas sobre produtos específicos.
7. Pedidos
GET /api/v2/order/get_order_list
Objetivo: Listar pedidos da loja (paginados).
Parâmetros principais:

time_range_field: Campo a ser usado para filtro de data (create_time, update_time)
time_from: Timestamp inicial
time_to: Timestamp final
page_size: Quantidade de pedidos por página
cursor: Cursor para paginação
order_status: Filtrar por status

Exemplo de chamada:
javascriptconst orders = await axios.get(
  `https://partner.shopeemobile.com/api/v2/order/get_order_list?partner_id=${partnerId}&timestamp=${timestamp}&access_token=${accessToken}&shop_id=${shopId}&sign=${signature}&time_range_field=create_time&time_from=${timeFrom}&time_to=${timeTo}&page_size=50`
);
8. Detalhes de Pedidos
GET /api/v2/order/get_order_detail
Objetivo: Obter detalhes completos de pedidos específicos.
Parâmetros:

order_sn_list: Lista de números de pedidos

9. Transações Financeiras
GET /api/v2/finance/get_wallet_transactions
Objetivo: Obter o histórico de transações financeiras da loja.
Parâmetros principais:

wallet_type: Tipo de carteira (0: Shopee Wallet, 1: Seller Balance)
create_time_from: Timestamp inicial
create_time_to: Timestamp final
page_size: Quantidade de transações por página
page_no: Número da página

10. Métricas de Marketing
GET /api/v2/marketing/get_marketing_metrics
Objetivo: Obter métricas de marketing da loja.
11. Configurações de Logística
GET /api/v2/logistics/get_channel_list
Objetivo: Obter a lista de métodos de envio disponíveis para a loja.
12. Categorias da Loja
GET /api/v2/product/get_category
Objetivo: Obter a lista de categorias disponíveis para a loja.
Observações Importantes:

Autenticação: Todas as chamadas exigem os parâmetros comuns:

partner_id
timestamp
sign
access_token
shop_id


Assinatura: Cada chamada precisa de uma assinatura única gerada conforme a documentação.
Rate Limits: A API tem limites de requisições. Implemente cache e controle de taxa.
Renovação de Tokens: O token de acesso expira após 4 horas. Verifique a expiração antes de cada chamada.
Paginação: A maioria dos endpoints que retornam listas de itens suporta paginação. Implemente a lógica para buscar todas as páginas quando necessário.