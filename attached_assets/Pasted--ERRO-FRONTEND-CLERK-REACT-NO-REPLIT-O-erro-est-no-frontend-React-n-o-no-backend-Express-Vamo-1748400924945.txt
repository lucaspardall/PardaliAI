üö® ERRO FRONTEND CLERK + REACT NO REPLIT
O erro est√° no frontend React, n√£o no backend Express. Vamos resolver:
üîç DIAGN√ìSTICO

Clerk n√£o est√° conseguindo carregar no ambiente Replit
Problema comum com URLs e dom√≠nios no Replit

üõ†Ô∏è SOLU√á√ïES
1Ô∏è‚É£ VERIFICAR CONFIGURA√á√ÉO DO CLERK NO FRONTEND
client/.env ou .env
env# Use a chave P√öBLICA (pk_) no frontend
VITE_CLERK_PUBLISHABLE_KEY=pk_test_...
client/src/main.tsx ou App.tsx
jsximport { ClerkProvider } from '@clerk/clerk-react'

// IMPORTANTE: No Replit, precisa configurar o domain
const clerkPubKey = import.meta.env.VITE_CLERK_PUBLISHABLE_KEY

export default function App() {
  return (
    <ClerkProvider 
      publishableKey={clerkPubKey}
      // CR√çTICO para Replit:
      afterSignInUrl="/"
      afterSignUpUrl="/"
    >
      {/* Seu app */}
    </ClerkProvider>
  )
}
2Ô∏è‚É£ SOLU√á√ÉO ESPEC√çFICA PARA REPLIT
Adicione no ClerkProvider:
jsx<ClerkProvider 
  publishableKey={clerkPubKey}
  // Configura√ß√µes especiais para Replit
  clerkJSUrl="https://cdn.jsdelivr.net/npm/@clerk/clerk-js@latest/dist/clerk.browser.js"
  telemetry={false}
>
3Ô∏è‚É£ VERIFICAR DOM√çNIO NO CLERK DASHBOARD

V√° ao Clerk Dashboard
Domains ‚Üí Adicione o dom√≠nio do Replit:
*.replit.dev
*.repl.co


4Ô∏è‚É£ CONFIGURA√á√ÉO VITE + REPLIT
vite.config.js
javascriptimport { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  server: {
    host: '0.0.0.0',
    port: 5173,
    hmr: {
      clientPort: 443
    }
  },
  // Importante para Replit
  base: '/',
  define: {
    global: 'window',
  }
})
5Ô∏è‚É£ SOLU√á√ÉO ALTERNATIVA - MODO DESENVOLVIMENTO
Se continuar com erro, use o modo de desenvolvimento:
jsximport { ClerkProvider } from '@clerk/clerk-react'

const clerkPubKey = import.meta.env.VITE_CLERK_PUBLISHABLE_KEY

// Detectar se est√° no Replit
const isReplit = window.location.hostname.includes('replit')

export default function App() {
  if (!clerkPubKey) {
    console.error('‚ö†Ô∏è Clerk Publishable Key n√£o encontrada!')
    return <div>Erro: Configure VITE_CLERK_PUBLISHABLE_KEY</div>
  }

  return (
    <ClerkProvider 
      publishableKey={clerkPubKey}
      // Configura√ß√£o para desenvolvimento
      {...(isReplit && {
        clerkJSUrl: "https://unpkg.com/@clerk/clerk-js@latest/dist/clerk.browser.js",
        telemetry: false
      })}
    >
      {/* Seu app */}
    </ClerkProvider>
  )
}
6Ô∏è‚É£ DEBUG R√ÅPIDO
Adicione este c√≥digo para debug:
jsx// No in√≠cio do App.tsx
console.log('üîë Clerk Key:', import.meta.env.VITE_CLERK_PUBLISHABLE_KEY?.substring(0, 10) + '...')
console.log('üåç Hostname:', window.location.hostname)
üöÄ CHECKLIST R√ÅPIDO

‚úÖ Usar VITE_CLERK_PUBLISHABLE_KEY (com prefixo VITE_)
‚úÖ Adicionar dom√≠nio Replit no Clerk Dashboard
‚úÖ Configurar clerkJSUrl se necess√°rio
‚úÖ Verificar se a chave √© p√∫blica (pk_ n√£o sk_)
‚úÖ Reiniciar o servidor Vite ap√≥s mudan√ßas no .env