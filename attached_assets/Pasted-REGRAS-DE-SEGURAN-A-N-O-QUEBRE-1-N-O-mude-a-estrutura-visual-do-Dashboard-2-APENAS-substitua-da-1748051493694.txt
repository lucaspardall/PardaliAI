REGRAS DE SEGURANÇA - NÃO QUEBRE:
1. NÃO mude a estrutura visual do Dashboard
2. APENAS substitua dados mockados por reais

No arquivo server/routes/analytics.js, ADICIONE este endpoint:

router.get('/dashboard', requireAuth, async (req, res) => {
  try {
    // Buscar loja do usuário
    const store = await prisma.shopeeStore.findFirst({
      where: { userId: req.user.id },
      include: {
        products: {
          select: {
            id: true,
            name: true,
            sales: true,
            views: true,
            ctr: true
          }
        }
      }
    });

    if (!store) {
      return res.json({
        metrics: {
          totalProducts: 0,
          totalViews: 0,
          totalSales: 0,
          averageCtr: 0
        },
        topProducts: [],
        lowPerformers: [],
        last7Days: []
      });
    }

    // Calcular métricas
    const metrics = {
      totalProducts: store.products.length,
      totalViews: store.products.reduce((sum, p) => sum + (p.views || 0), 0),
      totalSales: store.products.reduce((sum, p) => sum + (p.sales || 0), 0),
      averageCtr: store.products.reduce((sum, p) => sum + (p.ctr || 0), 0) / store.products.length || 0
    };

    // Top 5 produtos
    const topProducts = store.products
      .sort((a, b) => (b.sales || 0) - (a.sales || 0))
      .slice(0, 5);

    // Bottom 5 por CTR
    const lowPerformers = store.products
      .sort((a, b) => (a.ctr || 0) - (b.ctr || 0))
      .slice(0, 5);

    // Mock últimos 7 dias (por enquanto)
    const last7Days = Array.from({ length: 7 }, (_, i) => ({
      date: new Date(Date.now() - (6 - i) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      views: Math.floor(Math.random() * 1000),
      sales: Math.floor(Math.random() * 100)
    }));

    res.json({
      metrics,
      topProducts,
      lowPerformers,
      last7Days
    });

  } catch (error) {
    console.error('Dashboard error:', error);
    res.status(500).json({ error: 'Erro ao carregar dashboard' });
  }
});

NÃO MODIFIQUE outros endpoints. Se não existir requireAuth, use o middleware de auth que existe no projeto.